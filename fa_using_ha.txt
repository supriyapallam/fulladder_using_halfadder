//Design Code
module ha(output sum,carry, input a,b);
  assign
    sum=a^b;
  assign
    carry=a&b;
endmodule
module fa(output sum,carry, input a ,b, c);
  wire sum1,carry1,carry2;
  ha a1(sum1,carry1,a,b);
  ha a2(sum,carry2,sum1,c);
 assign
   carry=carry1|carry2;
endmodule

//Test Bench Code
module tb();
  reg a,b,c;
  wire sum,carry;
  fa DUT(sum,carry,a,b,c);
  initial
    begin
      integer i;
      for(i=0;i<8;i=i+1)
        begin
          {a,b,c}=i;
          #10;
        end
      $finish;
    end
  initial
    begin
      $monitor("a=%d,b=%d,c=%d,sum=%d,carry=%d",a,b,c,sum,carry);
    end
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
    end
endmodule
